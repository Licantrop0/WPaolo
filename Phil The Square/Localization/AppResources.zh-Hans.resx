<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>方块魔术</value>
  </data>
  <data name="BuyNow" xml:space="preserve">
    <value>现在购买这款应用</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>祝贺你 ！</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="PleaseInsertName" xml:space="preserve">
    <value>请插入您的姓名</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>很间单</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>高难度</value>
  </data>
  <data name="InsertName" xml:space="preserve">
    <value>插入您的姓名：</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>说明</value>
  </data>
  <data name="InstructionsText1" xml:space="preserve">
    <value>按顺序用数字填充方块</value>
  </data>
  <data name="InstructionsText2" xml:space="preserve">
    <value>允许的移动：
• 3 方块向左、 右、 上、 下
• 2 正方形的对角线</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NoMoreMoves" xml:space="preserve">
    <value>没有更多可用的移动</value>
  </data>
  <data name="PlayBackgroundMusic" xml:space="preserve">
    <value>你想要停止当前的音乐和播放背景音乐的这个应用程序吗？</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>等级</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="ElapsedTime" xml:space="preserve">
    <value>运行时间： {0:0.0}</value>
  </data>
  <data name="SeeRecords" xml:space="preserve">
    <value>查看等级</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Music" xml:space="preserve">
    <value>音乐</value>
  </data>
  <data name="Hints" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="HomeMusic" xml:space="preserve">
    <value>首页音乐</value>
  </data>
  <data name="SoundEffects" xml:space="preserve">
    <value>声音效果</value>
  </data>
  <data name="Philled" xml:space="preserve">
    <value>我赢了{0} 的游戏 {1} 秒 ！
你可以做得更好吗？</value>
  </data>
  <data name="ShareOnFacebook" xml:space="preserve">
    <value>分享！</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>打开</value>
  </data>
</root>