<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Età</value>
  </data>
  <data name="Alcohol" xml:space="preserve">
    <value>Quante volte bevi superalcolici?</value>
  </data>
  <data name="Alcohol1" xml:space="preserve">
    <value>Sono astemio</value>
  </data>
  <data name="Alcohol2" xml:space="preserve">
    <value>Senza eccedere</value>
  </data>
  <data name="Alcohol3" xml:space="preserve">
    <value>Tutti i giorni</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>L'orologio della Morte</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Cigarettes" xml:space="preserve">
    <value>Quante sigarette fumi al giorno?</value>
  </data>
  <data name="ClinicChecks" xml:space="preserve">
    <value>Quante volte fai visite mediche?</value>
  </data>
  <data name="ClinicChecks1" xml:space="preserve">
    <value>L'ultima è stata mesi fa</value>
  </data>
  <data name="ClinicChecks2" xml:space="preserve">
    <value>Solo se sono malato</value>
  </data>
  <data name="ClinicChecks3" xml:space="preserve">
    <value>Periodicamente</value>
  </data>
  <data name="CronicDisease" xml:space="preserve">
    <value>Soffri di malattie croniche?</value>
  </data>
  <data name="CronicDisease1" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="CronicDisease2" xml:space="preserve">
    <value>Si, lievi</value>
  </data>
  <data name="CronicDisease3" xml:space="preserve">
    <value>Si, gravi</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Giorno</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Giorni</value>
  </data>
  <data name="DaysToBirthday" xml:space="preserve">
    <value>Compleanno tra...</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="DisclaimerText" xml:space="preserve">
    <value>L'orologio della Morte è da considerare solo un gioco, senza alcuna velleità statistica o medica.
Comunque... toccati le palle!</value>
  </data>
  <data name="Drugs" xml:space="preserve">
    <value>Ti droghi?</value>
  </data>
  <data name="Drugs1" xml:space="preserve">
    <value>No, mai fatto</value>
  </data>
  <data name="Drugs2" xml:space="preserve">
    <value>Ogni tanto</value>
  </data>
  <data name="Drugs3" xml:space="preserve">
    <value>Spesso</value>
  </data>
  <data name="EditTest" xml:space="preserve">
    <value>Modifica Test</value>
  </data>
  <data name="ErrorFutureBirthday" xml:space="preserve">
    <value>Non puoi impostare la tua data di nascita oggi o nel futuro.</value>
  </data>
  <data name="ErrorNoBirthay" xml:space="preserve">
    <value>Inserisci la tua data di nascita</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Femmina</value>
  </data>
  <data name="Food" xml:space="preserve">
    <value>Che tipo di dieta segui?</value>
  </data>
  <data name="Food1" xml:space="preserve">
    <value>Mediterranea</value>
  </data>
  <data name="Food2" xml:space="preserve">
    <value>Mangio di tutto</value>
  </data>
  <data name="Food3" xml:space="preserve">
    <value>Grasso è bello</value>
  </data>
  <data name="Food4" xml:space="preserve">
    <value>Vegetariana</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Inserisci la tua altezza (cm)</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Ora</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Ore</value>
  </data>
  <data name="InsertBirthday" xml:space="preserve">
    <value>Inserisci la tua data di nascita</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Maschio</value>
  </data>
  <data name="MaleOrFemale" xml:space="preserve">
    <value>Sei maschio o femmina?</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>Minuto</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minuti</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Mese</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>Mesi</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Salva</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Secondo</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>Secondi</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settaggi</value>
  </data>
  <data name="Sports" xml:space="preserve">
    <value>Pratichi qualche sport?</value>
  </data>
  <data name="Sports1" xml:space="preserve">
    <value>Poco / per niente</value>
  </data>
  <data name="Sports2" xml:space="preserve">
    <value>Settimanalmente</value>
  </data>
  <data name="Sports3" xml:space="preserve">
    <value>Tutti i giorni</value>
  </data>
  <data name="Stress" xml:space="preserve">
    <value>Sei sotto stress?</value>
  </data>
  <data name="Stress1" xml:space="preserve">
    <value>Mai</value>
  </data>
  <data name="Stress2" xml:space="preserve">
    <value>Ogni tanto</value>
  </data>
  <data name="Stress3" xml:space="preserve">
    <value>Spesso</value>
  </data>
  <data name="TakeTest" xml:space="preserve">
    <value>Fai il test!</value>
  </data>
  <data name="TestNotCompleted" xml:space="preserve">
    <value>Per favore rispondi a tutte le domande</value>
  </data>
  <data name="TimeToDeath" xml:space="preserve">
    <value>Tempo Restante</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Inserisci il tuo peso (kg)</value>
  </data>
  <data name="WillDie" xml:space="preserve">
    <value>Morirai {0:D}, all'età di {1:N0} anni</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Anno</value>
  </data>
  <data name="Years" xml:space="preserve">
    <value>Anni</value>
  </data>
  <data name="YetAlive" xml:space="preserve">
    <value>Ma come fai ad essere ancora vivo?</value>
  </data>
</root>